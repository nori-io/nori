// Code generated by mockery v1.0.0. DO NOT EDIT.

//
/*
Copyright 2019 The Nori Authors.
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0
Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

package mocks

import mock "github.com/stretchr/testify/mock"
import plugin "github.com/nori-io/nori-common/plugin"

// PluginExtractor is an autogenerated mock type for the PluginExtractor type
type PluginExtractor struct {
	mock.Mock
}

// Get provides a mock function with given fields: file
func (_m *PluginExtractor) Get(file string) (plugin.Plugin, error) {
	ret := _m.Called(file)

	var r0 plugin.Plugin
	if rf, ok := ret.Get(0).(func(string) plugin.Plugin); ok {
		r0 = rf(file)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(plugin.Plugin)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(file)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
